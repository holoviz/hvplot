# We deliberately don't use travis's language=python option because
# we install miniconda and use conda to get python. Additionally,
# Travis's auto-install of python doesn't work on osx images (see
# https://github.com/travis-ci/travis-ci/issues/4729).
language: generic
sudo: false
os:
  - linux

dist: xenial

env:
  global:
    - PYENV_VERSION=3.7
    - PKG_TEST_PYTHON="--test-python=py36 --test-python=py27"
    - CHANS_DEV="-c pyviz/label/dev -c ioam -c intake"
    - CHANS="-c pyviz -c ioam"
    - PYTHON_VERSION=3.6

stages:
  - test
  - name: docs
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$
  - name: docs_dev
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: conda_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: pip_dev_package
    if: tag =~ ^v(\d+|\.)*[a-z]\d*$
  - name: conda_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$
  - name: pip_package
    if: tag =~ ^v(\d+|\.)*[^a-z]\d*$


jobs:
  include:
    ########## DEVELOPER INSTALL ##########

    - &default
      stage: test
      env: DESC="dev test_all_recommended"
      before_install:
        - pip install pyctdev && doit miniconda_install && pip uninstall -y doit pyctdev
        - export PATH="$HOME/miniconda/bin:$PATH" && hash -r
        - conda config --set always_yes True
        - conda install -c pyviz "pyctdev>=0.5" && doit ecosystem_setup
      install:
        - doit env_create $CHANS_DEV --python=$PYTHON_VERSION
        - source activate test-environment
        - doit develop_install $CHANS_DEV -o recommended
        - doit env_capture
      script:
        - bokeh sampledata
        - doit test_all_recommended

    - <<: *default
      stage: test
      env: DESC="dev test with extra dependencies"
      install:
        - doit env_create $CHANS_DEV --python=$PYTHON_VERSION
        - source activate test-environment
        - doit develop_install $CHANS_DEV -o recommended -o tests -o examples
        - doit env_capture
      script: doit test_unit_all
      after_success: coveralls

    - <<: *default
      env: DESC="py2 flakes" PYTHON_VERSION=2.7
      script: doit test_flakes

    ########## DOCS ##########

    - &doc_build
      <<: *default
      stage: docs
      env: HV_DOC_HTML="true" DESC="docs" CHANS_DEV="-c pyviz/label/dev -c pyviz -c ioam -c intake"
      script:
        - doit develop_install $CHANS_DEV -o doc
        - bokeh sampledata
        - nbsite generate-rst --org pyviz --project-name hvplot --offset 0 --skip '^.*Streaming.*$' --skip '^.*homepage.*$'
        - nbsite build --what=html --output=builtdocs
        - touch ./builtdocs/.nojekyll
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        local_dir: ./builtdocs
        fqdn: hvplot.pyviz.org
        on:
          tags: true
          all_branches: true

    - <<: *doc_build
      stage: docs_dev
      deploy:
        provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        local_dir: ./builtdocs
        repo: pyviz-dev/hvplot
        on:
          tags: true
          all_branches: true

    ########## END-USER PACKAGES ##########

    ### CONDA ####

    - <<: *default
      stage: conda_dev_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit package_build $CHANS_DEV $PKG_TEST_PYTHON --test-group=unit
      script:
        - doit package_upload --token=$CONDA_UPLOAD_TOKEN --label=dev

    - <<: *default
      stage: conda_package
      env: DESC="" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit package_build $CHANS $PKG_TEST_PYTHON --test-group=unit
      script:
        - doit package_upload --token=$CONDA_UPLOAD_TOKEN --label=dev --label=main

    ### PyPI ###

    - <<: *default
      stage: pip_dev_package
      env: PYPI="https://test.pypi.org/legacy/" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit develop_install $CHANS_DEV -o tests && pip uninstall -y hvplot
        - doit pip_on_conda
        - doit ecosystem=pip package_build --test-python=py36 --test-group=unit
      script: doit ecosystem=pip package_upload -u $TPPU -p $TPPP -r ${PYPI}

    - <<: *default
      stage: pip_package
      env: PYPI="https://upload.pypi.org/legacy/" TRAVIS_NOCACHE=$TRAVIS_JOB_ID
      install:
        - doit develop_install $CHANS_DEV -o tests && pip uninstall -y hvplot
        - doit pip_on_conda
        - doit ecosystem=pip package_build --test-python=py36 --test-group=unit
      script: doit ecosystem=pip package_upload -u $PPU -p $PPP -r ${PYPI}


notifications:
  email: false
