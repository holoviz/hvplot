name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - '*'

env:
  CACHE_VERSION: 1

jobs:
  test_suite:
    name: Pytest on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
        - os: ubuntu-latest
          path: /usr/share/miniconda3/envs/
        - os: macos-latest
          path: /Users/runner/miniconda3/envs/
        - os: windows-latest
          path: C:\Miniconda3\envs\
    timeout-minutes: 60
    defaults:
      run:
        shell: bash -l {0} 
    env:
      DESC: "Python ${{ matrix.python-version }} tests"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PYCTDEV_SELF_CHANNEL: "pyviz/label/dev"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          channel-priority: strict
          channels: pyviz/label/dev,conda-forge,nodefaults
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow
      - name: Get Today's date for cache
        run: echo "TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: conda cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-conda-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ env.TODAY }}-${{ env.CACHE_VERSION }}
          restore-keys: |
           ${{ runner.os }}-conda-${{ matrix.python-version }}-${{ env.TODAY }}-${{ env.CACHE_VERSION }}
        id: cache

      - name: conda setup
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          conda install "pyctdev>=0.5"
          doit env_create --python=${{ matrix.python-version }}
      - name: doit develop_install py3
        if: steps.cache.outputs.cache-hit != 'true' && matrix.python-version != '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda list
          doit develop_install -o examples -o tests
      - name: doit develop_install py36
        if: steps.cache.outputs.cache-hit != 'true' && matrix.python-version == '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda list
          conda install "pip <22"
          doit develop_install -o tests
          # Pin panel on Python 3.6 because one or more dev releases on the 0.13.* series
          # can be installed on Python 3.6 but are actually not compatible with Python 3.6
          # Panel 0.13 will support Python >= 3.7 only so the pin here can stay indefinitely.
          conda install "panel=0.12"
      - name: pygraphviz
        if: steps.cache.outputs.cache-hit != 'true' && ((contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')) && matrix.python-version != '3.6')
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda install pygraphviz
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          python -m pip install --no-deps --no-build-isolation -e .
          doit env_capture
      - name: doit test_flakes
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_flakes
      - name: doit test_unit
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_unit
      - name: test examples ubuntu
        if: (contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')) && matrix.python-version != '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          bokeh sampledata
          doit test_examples_extra
      - name: test examples windows
        if: contains(matrix.os, 'windows') && matrix.python-version != '3.6'
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          bokeh sampledata
          doit test_examples
      - name: codecov
        if: startsWith(matrix.python-version, 3.)
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          codecov
