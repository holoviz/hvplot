name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - '*'

jobs:
  test_suite:
    name: Pytest on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: [3.6]
        # python-version: [2.7, 3.6, 3.7, 3.8, 3.9]
        exclude:
          - os: windows-latest
            python-version: 2.7
          - os: macos-latest
            python-version: 2.7
    timeout-minutes: 90
    defaults:
      run:
        shell: bash -l {0} 
    env:
      DESC: "Python ${{ matrix.python-version }} tests"
      HV_REQUIREMENTS: "unit_tests"
      PYTHON_VERSION: ${{ matrix.python-version }}
      CHANS_DEV: "-c pyviz/label/dev -c conda-forge -c nodefaults"
      CHANS: "-c pyviz"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PYCTDEV_SELF_CHANNEL: "pyviz/label/dev"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          miniconda-version: "latest"
          channel-priority: strict
          channels: pyviz/label/dev,conda-forge,nodefaults
          mamba-version: "*"
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow
      - name: conda setup
        run: |
          conda install "pyctdev>=0.5"
          doit env_create --python=${{ matrix.python-version }}
      - name: doit develop_install py2
        if: startsWith(matrix.python-version, 2.)
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda list
          doit develop_install -o tests
      - name: Handling the decorator package on ubuntu and python 2.7
        if: matrix.os == 'ubuntu-latest' && startsWith(matrix.python-version, 2.)
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda install 'decorator=4.4.2'
      - name: doit develop_install py3
        if: startsWith(matrix.python-version, 3.)
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda list
          mamba install "param >=1.7.0" "pyct >=0.4.4" "setuptools >=30.3.0"
          mamba install "bokeh >=1.0.0" "colorcet >=2" "holoviews >=1.11.0" "pandas" "numpy >=1.15" "geoviews >=1.9.1" "numba >=0.53.1" "geopandas-base" "xarray >=0.17" "networkx >=2.6.3" "streamz >=0.6.3" "intake >=0.6.5" "intake-parquet >=0.2.3" "intake-xarray >=0.5.0" "dask >=2021.3.0" "datashader >=0.13.0" "notebook >=6.4.3" "rasterio" "cartopy" "pyproj" "s3fs >=2022.1.0" "scipy >=1.5.3" "pillow >=8.3.2" "selenium >=3.141.0" "spatialpandas >=0.4.3" "scikit-image >=0.17.2" "python-snappy >=0.6.0" "pooch >=1.6.0" "fiona" "codecov" "flake8" "parameterized" "pytest" "pytest-cov" "nbsmoke >=0.2.0" "numpy >=1.7"
          # doit develop_install -o examples -o tests
      - name: pygraphviz
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda install pygraphviz
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: doit test_flakes
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_flakes
      - name: doit test_unit
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit test_unit
      - name: test examples ubuntu
        if: (contains(matrix.os, 'ubuntu') || contains(matrix.os, 'macos')  ) && startsWith(matrix.python-version, 3.)
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          bokeh sampledata
          doit test_examples_extra
      - name: test examples windows
        if: contains(matrix.os, 'windows')
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          bokeh sampledata
          doit test_examples
      - name: codecov
        if: startsWith(matrix.python-version, 3.)
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          codecov
