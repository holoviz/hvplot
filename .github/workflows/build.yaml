name: packages
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+a[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+b[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
  # Dry-run only
  workflow_dispatch:
  schedule:
    - cron: '0 15 * * SUN'

env:
  PYTHON_VERSION: "3.11"

jobs:
  conda_build:
    name: Build Conda Packages
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash -l {0}
    env:
      MPLBACKEND: "Agg"
    steps:
      - uses: actions/checkout@v4
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          python-version: ${{ env.PYTHON_VERSION }}
          auto-update-conda: true
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: conda setup
        run: conda install anaconda-client conda-build setuptools_scm
      - name: conda build
        # TODO: remove --no-test when Dask 2024.4.2 is released on defaults
        run: VERSION=`python -m setuptools_scm` conda build conda.recipe/ --no-test
      - name: conda dev upload
        if: (github.event_name == 'push' && (contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        run: anaconda --token ${{ secrets.CONDA_UPLOAD_TOKEN }} upload --user pyviz --label=dev $(VERSION=`python -m setuptools_scm` conda build --output conda.recipe)
      - name: conda main upload
        if: (github.event_name == 'push' && !(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        run: anaconda --token ${{ secrets.CONDA_UPLOAD_TOKEN }} upload --user pyviz --label=dev --label=main $(VERSION=`python -m setuptools_scm` conda build --output conda.recipe)
  pip_build:
    name: Build PyPI Packages
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash -l {0}
    env:
      MPLBACKEND: "Agg"
    steps:
      - uses: actions/checkout@v4
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: env setup
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install build
      - name: pip build
        run: python -m build
      - name: Publish package to PyPI
        if: github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ secrets.PPU }}
          password: ${{ secrets.PPP }}
          packages-dir: dist/
