name: docs
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+a[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+b[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'
  workflow_dispatch:
    inputs:
      target:
        description: 'Site to build and deploy'
        type: choice
        options:
        - dev
        - main
        - dryrun
        required: true
        default: dryrun
  schedule:
    - cron: '0 15 * * SUN'

jobs:
  build_docs:
    name: Documentation
    runs-on: 'ubuntu-latest'
    timeout-minutes: 120
    defaults:
      run:
        shell: bash -l {0}
    env:
      DESC: "Documentation build"
      MPLBACKEND: "Agg"
      MOZ_HEADLESS: 1
      DISPLAY: ":99.0"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "100"
      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          channels: pyviz/label/dev,conda-forge,nodefaults
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - name: Set and echo git ref
        id: vars
        run: |
          echo "Deploying from ref ${GITHUB_REF#refs/*/}"
          echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: conda setup
        run: |
          conda create -n test-environment python=3.8 pyctdev
      - name: doit develop_install
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          conda list
          doit develop_install -o doc -o examples --conda-mode=mamba
      - name: doit env_capture
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          doit env_capture
      - name: bokeh sampledata
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          bokeh sampledata
      - name: generate rst
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          nbsite generate-rst --org holoviz --project-name hvplot
      - name: build docs
        run: |
          eval "$(conda shell.bash hook)"
          conda activate test-environment
          nbsite build --what=html --output=builtdocs --org holoviz --project-name hvplot
      - name: report failure
        if: failure()
        run: cat /tmp/sphinx-*.log | tail -n 100
      - name: Deploy dev
        uses: peaceiris/actions-gh-pages@v3
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'dev') ||
          (github.event_name == 'push' && (contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        with:
          personal_token: ${{ secrets.ACCESS_TOKEN }}
          external_repository: pyviz-dev/hvplot
          publish_dir: ./builtdocs
          force_orphan: true
      - name: Deploy main
        if: |
          (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'main') ||
          (github.event_name == 'push' && !(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./builtdocs
          cname: hvplot.holoviz.org
          force_orphan: true
